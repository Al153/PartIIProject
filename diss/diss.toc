\contentsline {chapter}{\numberline {1}Introduction}{11}{chapter.1}
\contentsline {chapter}{\numberline {2}Preparation}{13}{chapter.2}
\contentsline {section}{\numberline {2.1}The Scala Programming Language}{13}{section.2.1}
\contentsline {section}{\numberline {2.2}Definition of Type-Safety}{13}{section.2.2}
\contentsline {section}{\numberline {2.3}Existing Graph Databases}{14}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}Classes of Database}{14}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}Schema}{14}{subsection.2.3.2}
\contentsline {subsection}{\numberline {2.3.3}Mutability}{15}{subsection.2.3.3}
\contentsline {subsection}{\numberline {2.3.4}Query Languages}{15}{subsection.2.3.4}
\contentsline {section}{\numberline {2.4}Immutability}{15}{section.2.4}
\contentsline {section}{\numberline {2.5}Query Language}{16}{section.2.5}
\contentsline {subsection}{\numberline {2.5.1}Domain Specific Language Syntax}{16}{subsection.2.5.1}
\contentsline {subsection}{\numberline {2.5.2}Semantic Definitions}{17}{subsection.2.5.2}
\contentsline {paragraph}{FindPair queries}{18}{equation.2.5.1}
\contentsline {paragraph}{FindSingle queries}{18}{equation.2.5.2}
\contentsline {paragraph}{Other Definitions}{18}{section*.11}
\contentsline {subparagraph}{Object Types}{18}{section*.12}
\contentsline {subparagraph}{Named relations}{18}{section*.13}
\contentsline {subparagraph}{Findables}{19}{section*.14}
\contentsline {subparagraph}{A schema,}{19}{section*.15}
\contentsline {subparagraph}{A view,}{19}{section*.16}
\contentsline {subsection}{\numberline {2.5.3}Typing}{19}{subsection.2.5.3}
\contentsline {subsection}{\numberline {2.5.4}Semantics}{21}{subsection.2.5.4}
\contentsline {paragraph}{Operational Semantics}{21}{section*.17}
\contentsline {paragraph}{Denotational Semantics}{23}{section*.18}
\contentsline {subsection}{\numberline {2.5.5}Commands}{24}{subsection.2.5.5}
\contentsline {subsection}{\numberline {2.5.6}Summary}{25}{subsection.2.5.6}
\contentsline {section}{\numberline {2.6}Starting Point}{25}{section.2.6}
\contentsline {section}{\numberline {2.7}Software Engineering}{26}{section.2.7}
\contentsline {section}{\numberline {2.8}Scala Techniques}{26}{section.2.8}
\contentsline {subsection}{\numberline {2.8.1}type-enrichment}{26}{subsection.2.8.1}
\contentsline {subsection}{\numberline {2.8.2}Implicit Parameters}{28}{subsection.2.8.2}
\contentsline {subsection}{\numberline {2.8.3}Typeclass Pattern}{29}{subsection.2.8.3}
\contentsline {chapter}{\numberline {3}Implementation}{33}{chapter.3}
\contentsline {section}{\numberline {3.1}Note on Purity and Concurrency}{33}{section.3.1}
\contentsline {section}{\numberline {3.2}Functional Programming Techniques}{33}{section.3.2}
\contentsline {subsection}{\numberline {3.2.1}Monadic Compilation}{33}{subsection.3.2.1}
\contentsline {subsection}{\numberline {3.2.2}Constrained Future Monad}{34}{subsection.3.2.2}
\contentsline {subsection}{\numberline {3.2.3}Operation Monad}{36}{subsection.3.2.3}
\contentsline {subsection}{\numberline {3.2.4}Local and Global State}{36}{subsection.3.2.4}
\contentsline {section}{\numberline {3.3}Schema Implementation}{36}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}Schema Hierarchy}{36}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}DBObjects}{36}{subsection.3.3.2}
\contentsline {subsection}{\numberline {3.3.3}Unerasure}{37}{subsection.3.3.3}
\contentsline {subsection}{\numberline {3.3.4}Relations}{37}{subsection.3.3.4}
\contentsline {subsection}{\numberline {3.3.5}SchemaDescription}{37}{subsection.3.3.5}
\contentsline {subsection}{\numberline {3.3.6}Findables}{37}{subsection.3.3.6}
\contentsline {section}{\numberline {3.4}Query ADT}{37}{section.3.4}
\contentsline {section}{\numberline {3.5}Commands}{38}{section.3.5}
\contentsline {section}{\numberline {3.6}DSL}{38}{section.3.6}
\contentsline {section}{\numberline {3.7}Common Generic Algorithms}{38}{section.3.7}
\contentsline {subsection}{\numberline {3.7.1}Simple Traversal}{38}{subsection.3.7.1}
\contentsline {paragraph}{Exactly}{38}{section*.19}
\contentsline {paragraph}{Upto}{38}{section*.20}
\contentsline {paragraph}{FixedPoint}{38}{section*.21}
\contentsline {subsection}{\numberline {3.7.2}Full traversal}{39}{subsection.3.7.2}
\contentsline {paragraph}{Exactly}{39}{section*.22}
\contentsline {paragraph}{Upto}{39}{section*.23}
\contentsline {paragraph}{FixedPoint}{39}{section*.24}
\contentsline {subsection}{\numberline {3.7.3}Pathfinding}{40}{subsection.3.7.3}
\contentsline {subsection}{\numberline {3.7.4}Joins}{40}{subsection.3.7.4}
\contentsline {section}{\numberline {3.8}Views and Commits}{41}{section.3.8}
\contentsline {section}{\numberline {3.9}Memory Backend}{42}{section.3.9}
\contentsline {subsection}{\numberline {3.9.1}Table Structure}{42}{subsection.3.9.1}
\contentsline {subsection}{\numberline {3.9.2}Reads}{43}{subsection.3.9.2}
\contentsline {subsection}{\numberline {3.9.3}Left Optimisation}{43}{subsection.3.9.3}
\contentsline {subsection}{\numberline {3.9.4}Writes}{43}{subsection.3.9.4}
\contentsline {subsection}{\numberline {3.9.5}Storage}{44}{subsection.3.9.5}
\contentsline {subsection}{\numberline {3.9.6}Mutability}{44}{subsection.3.9.6}
\contentsline {subsection}{\numberline {3.9.7}Pathfinding and fixed point traversal}{44}{subsection.3.9.7}
\contentsline {section}{\numberline {3.10}PostgreSQL backend}{44}{section.3.10}
\contentsline {subsection}{\numberline {3.10.1}Table Structure}{45}{subsection.3.10.1}
\contentsline {paragraph}{Control Tables}{45}{section*.25}
\contentsline {paragraph}{Schema defined Tables}{45}{section*.26}
\contentsline {paragraph}{Control Tables}{45}{section*.27}
\contentsline {subsection}{\numberline {3.10.2}Query Structure}{46}{subsection.3.10.2}
\contentsline {subsection}{\numberline {3.10.3}Monadic Compilation}{47}{subsection.3.10.3}
\contentsline {subsection}{\numberline {3.10.4}Writes}{48}{subsection.3.10.4}
\contentsline {subsection}{\numberline {3.10.5}Mutability}{48}{subsection.3.10.5}
\contentsline {subsection}{\numberline {3.10.6}Pathfinding and Fixed Point Traversal}{48}{subsection.3.10.6}
\contentsline {subsection}{\numberline {3.10.7}Object Storage}{49}{subsection.3.10.7}
\contentsline {section}{\numberline {3.11}LMDB Backends}{49}{section.3.11}
\contentsline {subsection}{\numberline {3.11.1}Common}{49}{subsection.3.11.1}
\contentsline {paragraph}{LMDB API}{49}{section*.28}
\contentsline {subparagraph}{Terminology}{49}{section*.29}
\contentsline {subparagraph}{Transactions}{49}{section*.30}
\contentsline {subparagraph}{JVM API}{49}{section*.31}
\contentsline {paragraph}{Storage and Keys}{49}{section*.32}
\contentsline {paragraph}{Table Structure}{50}{section*.33}
\contentsline {paragraph}{Writes}{51}{section*.34}
\contentsline {subsection}{\numberline {3.11.2}Original LMDB Implementation}{51}{subsection.3.11.2}
\contentsline {subsection}{\numberline {3.11.3}Batched}{51}{subsection.3.11.3}
\contentsline {paragraph}{Read Batching}{51}{section*.35}
\contentsline {paragraph}{Pre-Caching}{51}{section*.36}
\contentsline {paragraph}{FindFrom}{51}{section*.37}
\contentsline {subsection}{\numberline {3.11.4}Common Subexpression Elimination}{52}{subsection.3.11.4}
\contentsline {paragraph}{The Memoisation Problem}{52}{section*.38}
\contentsline {paragraph}{Retrievers}{52}{section*.39}
\contentsline {paragraph}{Monadic Compilation}{52}{section*.40}
\contentsline {subsection}{\numberline {3.11.5}Complex Common Subexpression Elimination}{53}{subsection.3.11.5}
\contentsline {paragraph}{Index Building}{53}{section*.41}
\contentsline {paragraph}{Exactly}{53}{section*.42}
\contentsline {paragraph}{Upto Optimisation}{54}{section*.43}
\contentsline {chapter}{\numberline {4}Evaluation}{57}{chapter.4}
\contentsline {section}{\numberline {4.1}Unit Tests}{57}{section.4.1}
\contentsline {section}{\numberline {4.2}Performance Tests}{57}{section.4.2}
\contentsline {subsection}{\numberline {4.2.1}Hardware}{57}{subsection.4.2.1}
\contentsline {subsection}{\numberline {4.2.2}Datasets}{57}{subsection.4.2.2}
\contentsline {paragraph}{IMDB and TMDB}{57}{section*.44}
\contentsline {paragraph}{Objects}{58}{section*.45}
\contentsline {paragraph}{Relations}{58}{section*.46}
\contentsline {paragraph}{UFC}{58}{section*.47}
\contentsline {paragraph}{Objects}{58}{section*.48}
\contentsline {paragraph}{Relations}{58}{section*.49}
\contentsline {subsection}{\numberline {4.2.3}Test Harness}{59}{subsection.4.2.3}
\contentsline {subsection}{\numberline {4.2.4}Results}{59}{subsection.4.2.4}
\contentsline {paragraph}{Overall Picture}{59}{section*.50}
\contentsline {paragraph}{Redundancy}{59}{section*.51}
\contentsline {paragraph}{Conjunctions and Disjunctions}{59}{section*.52}
\contentsline {paragraph}{Tests that involve repetitions}{61}{section*.53}
\contentsline {subparagraph}{Exactly Test}{62}{section*.54}
\contentsline {subparagraph}{Exactly Pairs}{62}{section*.55}
\contentsline {subparagraph}{UptoTest}{63}{section*.56}
\contentsline {subparagraph}{UptoLarge}{64}{section*.57}
\contentsline {paragraph}{JoinSpeed}{64}{section*.58}
\contentsline {paragraph}{Closing Thoughts}{65}{section*.59}
\contentsline {chapter}{\numberline {5}Conclusion}{71}{chapter.5}
\contentsline {section}{\numberline {5.1}Successes}{71}{section.5.1}
\contentsline {section}{\numberline {5.2}Further extensions}{71}{section.5.2}
\contentsline {section}{\numberline {5.3}Lessons learned}{71}{section.5.3}
\contentsline {section}{\numberline {5.4}Concluding Thoughts}{71}{section.5.4}
\contentsline {chapter}{Bibliography}{71}{section.5.4}
\contentsline {chapter}{Appendix}{73}{chapter*.60}
\contentsline {chapter}{\numberline {A}The Domain closure(A, v)}{75}{appendix.A}
\contentsline {paragraph}{$closure(A, v)$ is a domain}{75}{section*.61}
\contentsline {paragraph}{proof:}{75}{section*.62}
\contentsline {chapter}{\numberline {B}Correspondence of operational and denotational semantics}{77}{appendix.B}
\contentsline {paragraph}{Proof: }{77}{section*.63}
\contentsline {paragraph}{FindSingle Queries:}{77}{section*.64}
\contentsline {subparagraph}{$S = AndS(S', S'')$}{77}{equation.B.0.1}
\contentsline {subparagraph}{Case $S = OrS(S', S'')$}{77}{equation.B.0.2}
\contentsline {subparagraph}{Case $S = From(S', P)$}{77}{equation.B.0.3}
\contentsline {subparagraph}{Case $S = Find(f)$}{78}{equation.B.0.4}
\contentsline {paragraph}{FindPair Queries:}{78}{section*.69}
\contentsline {subparagraph}{Case $P = Rel(r)$}{78}{equation.B.0.5}
\contentsline {subparagraph}{Case $P = RevRel(r)$}{78}{equation.B.0.6}
\contentsline {subparagraph}{Case $P = Id_A$}{78}{equation.B.0.7}
\contentsline {subparagraph}{Case $P = Chain(P', Q)$}{78}{section*.73}
\contentsline {subparagraph}{Case $P = And(P', Q)$}{78}{equation.B.0.9}
\contentsline {subparagraph}{Case $P = Or(P', Q)$}{78}{equation.B.0.10}
\contentsline {subparagraph}{Case $P = AndLeft(P', S)$}{79}{equation.B.0.11}
\contentsline {subparagraph}{Case $P = AndRight(P', S)$}{79}{equation.B.0.12}
\contentsline {subparagraph}{Case $P = Distinct(P')$}{79}{equation.B.0.13}
\contentsline {subparagraph}{Case $P = Exactly(n, P')$}{79}{section*.79}
\contentsline {subparagraph}{Case $Exactly(0, P'):$}{79}{section*.80}
\contentsline {subparagraph}{Case $Exactly(n+1, P')$, assuming $\Phi (\Sigma , Exactly(n, P'), A, A)$:}{79}{section*.81}
\contentsline {subparagraph}{Case $P = Upto(n, P')$}{80}{section*.82}
\contentsline {subparagraph}{Case $Upto(0, P')$}{80}{equation.B.0.21}
\contentsline {subparagraph}{Case $Upto(n+1, P')$}{80}{equation.B.0.22}
\contentsline {subparagraph}{case $P = FixedPoint(P')$}{80}{section*.85}
\contentsline {subparagraph}{Lemma: f is continuous in the domain $closure(A, v)$}{80}{section*.86}
\contentsline {subparagraph}{Firstly, f is monotonous.}{80}{section*.87}
\contentsline {subparagraph}{Secondly, $f$ preserves the $lub$s of chains.}{81}{section*.88}
\contentsline {subparagraph}{Lemma $(a, b) \triangleleft _{(A, A), v} FixedPoint(P') \Leftrightarrow \exists n. (a, b) \in f^n(\bot )$}{81}{section*.89}
\contentsline {subparagraph}{Case $(a,b) \triangleleft _{A, A, v} Id_A$:\\}{81}{section*.90}
\contentsline {subparagraph}{Case $(a, b) \triangleleft _{(A,A), v} P' \wedge (b, c) \triangleleft _{(A,A), v} FixedPoint(P')\\ $}{81}{section*.91}
\contentsline {subparagraph}{Case $(a, b) \in \bot $}{82}{equation.B.0.28}
\contentsline {subparagraph}{Case $\exists n \geq 0. (a, b) \in f^{n+1}(\bot ) \wedge \neg ((a, b) \in f^n(\bot ))$}{82}{equation.B.0.29}
\contentsline {chapter}{\numberline {C}Properties of the Join Denotation}{83}{appendix.C}
\contentsline {section}{\numberline {C.1}Join as a monoid operation}{83}{section.C.1}
\contentsline {subsection}{\numberline {C.1.1}Join is closed on $Query_{A}(v)$}{83}{subsection.C.1.1}
\contentsline {paragraph}{Proof:}{83}{section*.94}
\contentsline {subsection}{\numberline {C.1.2}Lemma: Join is associative on $Query_{A}(v)$}{83}{subsection.C.1.2}
\contentsline {paragraph}{Proof:}{83}{section*.95}
\contentsline {subsection}{\numberline {C.1.3}${\bf [\tmspace -\thinmuskip {.1667em}[}Id_A{\bf ]\tmspace -\thinmuskip {.1667em}]}(v)$ As an Identity of Join}{84}{subsection.C.1.3}
\contentsline {paragraph}{Proof:}{84}{section*.96}
\contentsline {section}{\numberline {C.2}Usages of Join as a Monoid}{84}{section.C.2}
\contentsline {section}{\numberline {C.3}Joins distribute over Or}{84}{section.C.3}
\contentsline {section}{\numberline {C.4}$Upto(n, P)$ expressed as $Exactly(n, P')$}{85}{section.C.4}
\contentsline {section}{\numberline {C.5}Joins do not distribute over And}{85}{section.C.5}
\contentsline {chapter}{\numberline {D}Scala Algebraic Data Type Definitions}{87}{appendix.D}
\contentsline {chapter}{\numberline {E}Denotational Semantics Based Memory Implementation}{91}{appendix.E}
\contentsline {section}{\numberline {E.1}FindPairs}{91}{section.E.1}
\contentsline {section}{\numberline {E.2}FindSingle}{92}{section.E.2}
\contentsline {chapter}{\numberline {F}DSL Examples}{95}{appendix.F}
\contentsline {section}{\numberline {F.1}Simple Transitive Queries}{95}{section.F.1}
\contentsline {section}{\numberline {F.2}FindSingle queries}{95}{section.F.2}
\contentsline {section}{\numberline {F.3}Conjunction and Intersection}{96}{section.F.3}
\contentsline {section}{\numberline {F.4}Repetition}{97}{section.F.4}
\contentsline {chapter}{\numberline {G}Example of SchemaObject implementation}{99}{appendix.G}
